[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "typeshed_stats"
dynamic = ["version"]
authors = [
    { name="Alex Waygood", email="alex.waygood@gmail.com" },
]
description = "Library and command-line tool to gather stats on typeshed packages"
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "typeshed",
    "typing",
    "stubs",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development",
    "Typing :: Typed",
]
dependencies = [
    "attrs>=22.2.0",
    "cattrs",
    "aiohttp[speedups]",
    "packaging",
    "pathspec>=0.10.3",  # needs to be py.typed
    "Jinja2>=3",
    "tomli; python_version < '3.11'",
]

[project.urls]
"Homepage" = "https://github.com/AlexWaygood/typeshed-stats"
"Bug Tracker" = "https://github.com/AlexWaygood/typeshed-stats/issues"

[project.scripts]
typeshed-stats = "typeshed_stats._cli:main"

[project.optional-dependencies]
rich = ["rich", "rich-argparse>=1"]
# Include the [rich] extra in the [docs] extra
# so the CLI docs generated from --help are consistent
docs = [
    "typeshed-stats[rich]",
    "MarkDown==3.3.7",
    "mkdocs==1.4.3",
    "mkdocs-macros-plugin==1.0.1",
    "mkdocs-material==9.1.14",
    "mkdocstrings[python]==0.21.2",
]
pytest = [
    "typeshed-stats[rich]",
    "beautifulsoup4>=4,<5",
    "covdefaults==2.3.0",
    "coverage==6.5.0",
    "Markdown>=3,<4",
    "pytest==7.3.1",
    "pytest-antilru==1.1.1",
    "pytest-asyncio==0.21.0",
    "pytest-dependency==0.5.1",
    "pytest-mock==3.10.0",
    "pytest-subtests==0.11.0",
]
typecheck = [
    "typeshed-stats[rich,docs,pytest]",
    "mypy==1.3.0",
    "types-beautifulsoup4==4.12.0.5",
    "types-Markdown==3.4.2.9",
]
flake8 = [
    "flake8==6.0.0",
    "flake8-bugbear==23.5.9",
    "flake8-docstrings==1.7.0",
    "flake8-noqa==1.3.1",
    "flake8-pytest-style==1.7.2",
    "flake8-simplify==0.20.0",
]
# All of these must match .pre-commit-config.yaml
#
# Note that not all of the dependencies in the pre-commit config file are listed here.
# That's deliberate (it's not necessary to run them all locally).
# This file just lists the ones which it's convenient to have around locally.
misc-lint = [
    "black==23.3.0",
    "blacken-docs==1.13.0",
    "isort==5.12.0",
    "pre-commit-hooks==4.4.0",
    "pycln==2.1.3",
    "pyupgrade==3.4.0",
]
dev = ["typeshed-stats[rich,docs,typecheck,pytest,flake8,misc-lint]"]

[tool.hatch.version]
path = "src/typeshed_stats/__init__.py"

[tool.pycln]
all = true
disable_all_dunder_policy = true

[tool.black]
line_length = 88
skip-magic-trailing-comma = true

[tool.isort]
profile = 'black'
line_length = 88
combine_as_imports = true
skip_gitignore = true

[tool.mypy]
files = ['website_macros.py', 'src', 'tests', 'scripts']
show_traceback = true
pretty = true
strict = true
enable_error_code = 'ignore-without-code,redundant-expr,possibly-undefined'
warn_unreachable = true

[tool.pyright]
include = ["."]
venv = "env"
pythonVersion = "3.10"
typeCheckingMode = "strict"

# Extra strict settings
reportMissingModuleSource = "error"
reportShadowedImports = "error"
reportCallInDefaultInitializer = "error"
reportUnnecessaryTypeIgnoreComment = "error"

# Leave "type: ignore" comments to mypy
enableTypeIgnoreComments = false

# Runtime libraries used are not all py.typed
useLibraryCodeForTypes = true

# Overly strict settings with false positives
reportMissingSuperCall = "none"
reportImplicitStringConcatenation = "none"
reportUninitializedInstanceVariable = false

# Already flagged by mypy
reportMissingTypeStubs = "none"

# Extremely strict settings that result in lots of pyright: ignores everywhere
reportUnknownVariableType = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownLambdaType = false
reportUnnecessaryIsInstance = false

[tool.pytest.ini_options]
testpaths = ["src", "tests"]
addopts = "--strict-config --strict-markers"
xfail_strict = true
asyncio_mode = "auto"
markers = ["requires_network"]
filterwarnings = [
    "error",
    # Ignore ResourceWarnings about unclosed sockets
    'ignore:Exception ignored in:pytest.PytestUnraisableExceptionWarning',
]

[tool.coverage.run]
# Note that many settings are automatically added due to this plugin
plugins = ["covdefaults"]
source = ["src/typeshed_stats", "tests"]

[tool.coverage.report]
# This extends the lines that covdefaults already excludes
exclude_lines = ['^if typing.TYPE_CHECKING:$']

[tool.coverage.covdefaults]
subtract_omit = "*/__main__.py"
