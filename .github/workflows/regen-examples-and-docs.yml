name: Regenerate examples and docs

on:
  schedule:
    - cron: "0 */12 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - 'tests/**'
      - 'examples/**'
      - '**.json'
      - '**.csv'
      - '**.html'
  workflow_dispatch:

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  regen_examples_and_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: git config
        run: |
          git config --global user.name statsabot
          git config --global user.email ''
      - uses: actions/setup-python@v4
        with:
          cache: "pip"
          cache-dependency-path: |
            requirements/docs.txt
            pyproject.toml
          python-version: "3.10"
      - name: Install wheel
        run: pip install "wheel<1"
      - name: Install requirements
        # Install with the [rich] extra so the CLI docs generated from --help are consistent
        run: |
          pip install -r requirements/docs.txt
          pip install -e .[rich]
      - name: Regenerate examples and docs
        run: python scripts/regenerate.py --download-typeshed
      - name: Check the generated files with pre-commit
        uses: pre-commit/action@v3.0.0
      - name: Commit and push the changes
        if: ${{ github.repository == 'AlexWaygood/typeshed-stats' && always()}}
        run: |
          git commit -a -m "ðŸ‘· Automated regeneration of examples and docs"
          git push
      - name: Deploy docs
        if: ${{ github.repository == 'AlexWaygood/typeshed-stats' && always()}}
        run: mkdocs gh-deploy -m "ðŸš€ Deploying {sha} with MkDocs {version}" --force

  create-issue-on-failure:
    name: Create an issue if the automated regeneration failed
    runs-on: ubuntu-latest
    needs: [regen_examples_and_docs]
    if: ${{ github.repository == 'AlexWaygood/typeshed-stats' && always() && needs.regen_examples_and_docs.result == 'failure' }}
    permissions:
      issues: write
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.create({
              owner: "AlexWaygood",
              repo: "typeshed-stats",
              title: `Automated regeneration of examples failed on ${new Date().toDateString()}`,
              body: "Runs are listed here: https://github.com/AlexWaygood/typeshed-stats/actions/workflows/regen-examples-and-docs.yml",
            })
